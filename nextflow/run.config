params {
    publish_mode = "symlink"

	human_ref = "/scratch/schudoma/cazy/hg38/GCA_000001405.28_GRCh38.p13"
	reference = "/scratch/schudoma/ngless/data/Modules/igc.ngm/0.0/data/IGC-bwa-0.7.17.fna"

	//pathseq_database = "/g/scb/zeller/fspringe/Database/PathSeq_Legacy"
	pathseq_database = "/scratch/schudoma/vknight/PathSeq_Legacy"
	
}

/* section below needs to be adjusted to local cluster */
executor {
    $slurm {
        queueSize = 10
    }
    $local {
        cpus = 1
        memory = '4 GB'
    }
}

process {
	withName: bam2fq {
		module = "SAMtools/1.10-GCC-8.3.0"
        executor = "slurm"
        errorStrategy = {task.attempt <= 3 ? "retry" : "ignore"}
        cpus = 2
        memory = {8.GB * task.attempt}
        time = '2h'
        maxRetries = 3	
	}
	withName: fq2bam {
		module = ["GATK", "Java/1.8.0_221"]
        executor = "slurm"
        errorStrategy = {task.attempt <= 3 ? "retry" : "ignore"}
        cpus = 2
        memory = {8.GB * task.attempt}
        time = '2h'
        maxRetries = 3	
	}
	withName: count_reads {
		module = "SAMtools/1.10-GCC-8.3.0"
        executor = "slurm"
        errorStrategy = {task.attempt <= 3 ? "retry" : "ignore"}
        cpus = 2
        memory = {8.GB * task.attempt}
        time = '2h'
        maxRetries = 3	
	}
	withName: kraken2_single {
		module = "BLAST+/2.9.0-foss-2018b"
        executor = "slurm"
        errorStrategy = {task.attempt <= 3 ? "retry" : "ignore"}
        cpus = 8
        memory = {64.GB * task.attempt}
        time = '2h'
        maxRetries = 3	
	}
	withName: kraken2_paired {
		module = "BLAST+/2.9.0-foss-2018b"
        executor = "slurm"
        errorStrategy = {task.attempt <= 3 ? "retry" : "ignore"}
        cpus = 8
        memory = {64.GB * task.attempt}
        time = '2h'
        maxRetries = 3	
	}
	withName: mtag_extraction_single {
		conda = "/g/scb/zeller/fspringe/Software/mTAGs/"
        executor = "slurm"
        errorStrategy = {task.attempt <= 3 ? "retry" : "ignore"}	
        cpus = 24 
        memory = {64.GB * task.attempt}
        time = '24h'
        maxRetries = 3	
	}
	withName: mtag_extraction_paired {
		conda = "/g/scb/zeller/fspringe/Software/mTAGs/"
        executor = "slurm"
        errorStrategy = {task.attempt <= 3 ? "retry" : "ignore"}	
        cpus = 24 
        memory = {64.GB * task.attempt}
        time = '24h'
        maxRetries = 3	
	}
	withName: mapseq_single {
		conda = "/g/scb/zeller/fspringe/Software/mTAGs/"
        executor = "slurm"
        errorStrategy = {task.attempt <= 3 ? "retry" : "ignore"}	
        cpus = 8 
        memory = {8.GB * task.attempt}
        time = '2h'
        maxRetries = 3	
	}
	withName: mapseq_paired {
		conda = "/g/scb/zeller/fspringe/Software/mTAGs/"
        executor = "slurm"
        errorStrategy = {task.attempt <= 3 ? "retry" : "ignore"}	
        cpus = 8 
        memory = {8.GB * task.attempt}
        time = '2h'
        maxRetries = 3	
	}
	withName: motus_single {
		conda = "/g/scb/zeller/fspringe/Software/mOTUs/motus"
		//conda = "bioconda::motus==2.6.0"
        executor = "slurm"
        errorStrategy = {task.attempt <= 3 ? "retry" : "ignore"}	
        cpus = 6 
        memory = {8.GB * task.attempt}
        time = '2h'
        maxRetries = 3	
	}
	withName: motus_paired {
		conda = "/g/scb/zeller/fspringe/Software/mOTUs/motus"
		//conda = "bioconda::motus==2.6.0"
        executor = "slurm"
        errorStrategy = {task.attempt <= 3 ? "retry" : "ignore"}	
        cpus = 6 
        memory = {8.GB * task.attempt}
        time = '2h'
        maxRetries = 3	
	}
	withName: pathseq {
		module = ["GATK", "Java/1.8.0_221"]
        executor = "slurm"
        errorStrategy = {task.attempt <= 3 ? "retry" : "ignore"}
        cpus = 1
        memory = {256.GB * task.attempt}
        time = '2h'
        maxRetries = 3	
	}
	withName: collate_mapseq_single {
        executor = "slurm"
        errorStrategy = {task.attempt <= 3 ? "retry" : "ignore"}
        cpus = 1
        memory = {2.GB * task.attempt}
        time = '2h'
        maxRetries = 3	
	}
	withName: collate_mapseq_paired {
        executor = "slurm"
        errorStrategy = {task.attempt <= 3 ? "retry" : "ignore"}
        cpus = 1
        memory = {2.GB * task.attempt}
        time = '2h'
        maxRetries = 3	
	}
}

